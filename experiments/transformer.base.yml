model_args: # model construction args
  ff_size: 2048
  hid_size: 512
  n_heads: 8
  attn_dropout: 0.1
  dropout: 0.2
  enc_layers: 6
  dec_layers: 6
  src_vocab: 8000
  tgt_vocab: 8000
  tied_emb: three-way  # choices: null, one-way, two-way, three-way
model_type: tfmnmt  # model type. tfmnmt is the transformer NMT model

optimizer:
  name: adam
  args:
    betas:
    - 0.9
    - 0.98
    eps: 1.0e-09
    lr: 0.1

schedule:
  name: noam
  args:
    constant: 2
    warmup: 8000
    model_dim: 512

criterion:
  name: smooth_kld    #options "cross_entropy", "smooth_kld", "binary_cross_entropy", "triplet_loss"
  args:
    label_smoothing: 0.1

prep: # data preparation
  max_types: 8000  # maximum number of types in vocab ; if shared_vocab=false, set max_src_types and max_tgt_types separately instead of this one
  pieces: bpe   # choices: bpe, char, word, unigram  from google/sentencepiece
  shared_vocab: true  # true means same vocab for src and tgt, false means different vocabs
  src_len: 256   # longer sentences, decision is made as per 'truncate={true,false}'
  tgt_len: 256
  truncate: true   # what to do with longer sentences: if true truncate at src_len or tgt_len; if false filter away
  train_src: experiments/sample-data/sampl.test.fr.tok
  train_tgt: experiments/sample-data/sampl.test.en.tok
  valid_src: experiments/sample-data/sampl.valid.fr.tok
  valid_tgt: experiments/sample-data/sampl.valid.en.tok
  mono_src: []  # monolingual data for learning vocab or BPE
  mono_tgt: []
tester:
  decoder:
    beam_size: 4
    batch_size: 12000  # this is for 1 beam; effective_batch_size = batch_size / beam_size
    lp_alpha: 0.0     # length penalty
  suite:  # suit of tests to run after the training
    # name of test and list of src.tok, ref files (ref should be unmodified)
    valid:
      - experiments/sample-data/sampl.valid.fr.tok
      - experiments/sample-data/sampl.valid.en     # reference, unmodified -- not tokenized
    test:
      - experiments/sample-data/sampl.test.fr.tok
      - experiments/sample-data/sampl.test.en     # reference, unmodified -- not tokenized
trainer:
  init_args:
    chunk_size: 10   # generation in chunks of time steps to reduce memory consumption
  batch_size: 4200   # not exceeding these many tokens (including paddings). in tensor2tensor it is mean batch size
  check_point: 1000  # how often to checkpoint?
  keep_models: 10   # how many checkpoints to keep on disk (small enough to save disk, large enough for checkpt averaging
  steps: 200000   # how many steps to train
updated_at: '2019-03-09T21:15:33.707183'
seed: 12345  # fix the manual seed of pytorch + cuda + numpy + python_stdlib RNGs.  Remove/comment this to disable